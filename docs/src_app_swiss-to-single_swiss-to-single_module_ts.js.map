{"version":3,"file":"src_app_swiss-to-single_swiss-to-single_module_ts.js","mappings":"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","names":["SwissTeam","constructor","index","swissMatchups","this","teamIndex","swissMatchup","update","gameDiff","length","m","Matchup","matchup","a","b","teamBlacklist","push","static","team1Wins","team1Losses","team2Wins","team2Losses","team1Dif","team2Dif","team1Win","team2Win","i0","SwissMatchupComponent","EventEmitter","ngOnInit","checkValid","tableUpdate","next","match","round","data","isValid","emit","selectors","SwissOpponentComponent","teamDb","Team","opponent","team1","team2","wins","losses","opponentTeam","getTeam","LeaderBoardComponent","SwissStageComponent","MatTableDataSource","sub","loadBracket","subscribe","teams","t","teamsUnsorted","teamsSorted","slice","sort","initiateBracket","ngOnDestroy","unsubscribe","resetTable","round1","round2High","round2Low","round2HighValid","round2LowValid","round3High","round3Mid","round3Low","round3HighValid","round3MidValid","round3LowValid","round4High","round4Low","round4HighValid","round4LowValid","round5","refreshData","fillTeams","generateRound2","teamsHigh","teamsLow","initiateRound2","valid","displayedColumns","round2H","initiateRound3","round2L","generateRound3","teamsMid","round3H","initiateRound4","round3M","round3L","generateRound4","round4H","initiateRound5","round4L","generateRound5","round5Val","teamsTop8","testButton","teamsArr","swissArr","func","team1Index","i","team2Index","undefined","find","element","arr","concat","temp","matchups","console","log","ctx","ReplaySubject","Subject","_bufferSize","Infinity","_windowTime","_timestampProvider","dateTimestampProvider","super","_buffer","_infiniteTimeWindow","Math","max","value","isStopped","now","_trimBuffer","_subscribe","subscriber","_throwIfClosed","subscription","_innerSubscribe","copy","closed","_checkFinalizedStatuses","adjustedBufferSize","splice","last","SingleMatchupComponent","checkWin","teamScore","teamWon","SingleElimComponent","Array","teamsChanged","teamsSubject","updateResults","input","output","val","routes","path","component","SwissToSingleComponent","teamsDb","route","teamsTop16","queryParams","params","param","split","initiateTeamsDb","getTeams","setTop8","SwissToSingleRoutingModule","RouterModule","SwissToSingleModule","FormsModule","ReactiveFormsModule","CommonModule","MatToolbarModule","MatButtonModule","MatGridListModule","MatCardModule","MatTableModule","MatChipsModule","MatInputModule","MatFormFieldModule","MatSelectModule","HttpClientModule","MatRippleModule","SharedModule"],"sourceRoot":"webpack:///","sources":["./src/app/shared/swiss-team.model.ts","./src/app/swiss-to-single/swiss-stage/swiss-matchup/swiss-matchup.component.html","./src/app/swiss-to-single/swiss-stage/swiss-matchup/swiss-matchup.component.ts","./src/app/swiss-to-single/swiss-stage/swiss-opponent/swiss-opponent.component.ts","./src/app/swiss-to-single/swiss-stage/swiss-opponent/swiss-opponent.component.html","./src/app/swiss-to-single/swiss-stage/leader-board/leader-board.component.html","./src/app/swiss-to-single/swiss-stage/leader-board/leader-board.component.ts","./src/app/swiss-to-single/swiss-stage/swiss-stage.component.ts","./src/app/swiss-to-single/swiss-stage/swiss-stage.component.html","./node_modules/rxjs/dist/esm/internal/ReplaySubject.js","./src/app/swiss-to-single/single-elim/single-matchup/single-matchup.component.ts","./src/app/swiss-to-single/single-elim/single-matchup/single-matchup.component.html","./src/app/swiss-to-single/single-elim/single-elim.component.ts","./src/app/swiss-to-single/single-elim/single-elim.component.html","./src/app/swiss-to-single/swiss-to-single-routing.module.ts","./src/app/swiss-to-single/swiss-to-single.component.ts","./src/app/swiss-to-single/swiss-to-single.component.html","./src/app/swiss-to-single/swiss-to-single.module.ts"],"sourcesContent":["import { Matchup } from \"./matchup.model\";\n\nexport class SwissTeam {\n    teamIndex: number;\n    swissMatchup: Matchup[] = [];\n    gameDiff: number = 0;\n    teamBlacklist: number[] = []\n\n    constructor(index: number, swissMatchups: Matchup[]) {\n        this.teamIndex = index;\n        this.swissMatchup = swissMatchups;\n    }\n\n    update() {\n        this.gameDiff = 0;\n        if (this.swissMatchup.length <= 0) return;\n        for (let m of this.swissMatchup) {\n            this.gameDiff += Matchup.checkWinDiff(this.teamIndex, m)\n        }\n        const matchup = this.swissMatchup[this.swissMatchup.length - 1]\n        const [a, b] = Matchup.teamWon(matchup)\n        if (this.teamIndex == a) {\n            this.teamBlacklist.push(b)\n        } else {\n            this.teamBlacklist.push(a)\n        }\n    }\n\n    static sortFunctionAllMatches(a: SwissTeam, b: SwissTeam): number {\n        let team1Wins = 0;\n        let team1Losses = 0;\n        let team2Wins = 0;\n        let team2Losses = 0;\n        for (let swissMatchup of a.swissMatchup) {\n            if (Matchup.checkWin(a.teamIndex, swissMatchup)) {\n                team1Wins++;\n            } else {\n                team1Losses++;\n            }\n        }\n        for (let swissMatchup of b.swissMatchup) {\n            if (Matchup.checkWin(b.teamIndex, swissMatchup)) {\n                team2Wins++;\n            } else {\n                team2Losses++;\n            }\n        }\n        if (team1Wins > team2Wins || team1Losses < team2Losses) {\n            return -1;\n        }\n        if (team1Wins < team2Wins || team1Losses > team2Losses) {\n            return 1;\n        }\n\n        const team1Dif = a.gameDiff\n        const team2Dif = b.gameDiff\n        if (team1Dif > team2Dif) {\n            return -1;\n        }\n        if (team2Dif > team1Dif) {\n            return 1;\n        }\n\n        // return a.teamIndex - b.teamIndex;\n        return a.teamIndex - b.teamIndex;\n    }\n\n    static sortFunctionSwissRound(a: SwissTeam, b: SwissTeam): number {\n        const team1Win = Matchup.checkWin(a.teamIndex, a.swissMatchup[a.swissMatchup.length - 1])\n        const team2Win = Matchup.checkWin(b.teamIndex, b.swissMatchup[b.swissMatchup.length - 1])\n        if (!team1Win && team2Win) {\n            return -1;\n        }\n        if (!team2Win && team1Win) {\n            return 1;\n        }\n        // const team1Dif = Matchup.checkWinDiff(a.teamIndex, a.swissMatchup[a.swissMatchup.length - 1]);\n        // const team2Dif = Matchup.checkWinDiff(b.teamIndex, b.swissMatchup[b.swissMatchup.length - 1]);\n        const team1Dif = a.gameDiff\n        const team2Dif = b.gameDiff\n\n        if (team1Dif > team2Dif) {\n            return -1;\n        }\n        if (team2Dif > team1Dif) {\n            return 1;\n        }\n\n        return a.teamIndex - b.teamIndex;\n    }\n}","<table mat-table [dataSource]=\"round\">\n    <ng-container matColumnDef=\"team1\">\n        <th mat-header-cell *matHeaderCellDef>Team 1</th>\n        <td mat-cell *matCellDef=\"let element\">\n            <app-team [id]=\"element.team1\"></app-team>\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"score1\">\n        <th mat-header-cell *matHeaderCellDef>Wins</th>\n        <td mat-cell *matCellDef=\"let element\">\n            <mat-form-field appearance=\"fill\" color=\"primary\" style=\"width: 100px;\">\n                <mat-label>Score</mat-label>\n                <!-- <mat-select [(value)]=\"element.team1Wins\" (selectionChange)=\"this.checkValid()\">\n                    <mat-option [value]=\"0\">0</mat-option>\n                    <mat-option [value]=\"1\">1</mat-option>\n                    <mat-option [value]=\"2\">2</mat-option>\n                    <mat-option [value]=\"3\">3</mat-option>\n                </mat-select> -->\n                <input matInput type=\"number\" [(ngModel)]=\"element.team1Wins\" (input)=\"this.checkValid()\" min=\"0\"\n                    max=\"3\">\n            </mat-form-field>\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"score2\">\n        <th mat-header-cell *matHeaderCellDef>Losses</th>\n        <td mat-cell *matCellDef=\"let element\">\n            <mat-form-field appearance=\"fill\" color=\"primary\" style=\"width: 100px; padding: 0;\">\n                <mat-label>Score</mat-label>\n                <!-- <mat-select [(value)]=\"element.team2Wins\" (selectionChange)=\"this.checkValid()\">\n                    <mat-option [value]=\"0\">0</mat-option>\n                    <mat-option [value]=\"1\">1</mat-option>\n                    <mat-option [value]=\"2\">2</mat-option>\n                    <mat-option [value]=\"3\">3</mat-option>\n                </mat-select> -->\n                <input matInput type=\"number\" [(ngModel)]=\"element.team2Wins\" (input)=\"this.checkValid()\" min=\"0\"\n                    max=\"3\">\n            </mat-form-field>\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"team2\">\n        <th mat-header-cell *matHeaderCellDef>Team 2</th>\n        <td mat-cell *matCellDef=\"let element\">\n            <app-team [id]=\"element.team2\"></app-team>\n        </td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\" displayedColumns\">\n    </tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Matchup } from 'src/app/shared/matchup.model';\n\n@Component({\n  selector: 'app-swiss-matchup',\n  templateUrl: './swiss-matchup.component.html',\n  styleUrls: ['./swiss-matchup.component.scss']\n})\nexport class SwissMatchupComponent implements OnInit {\n  @Input() round!: MatTableDataSource<Matchup>;\n  @Output() isValid = new EventEmitter<boolean>();\n  @Output() tableUpdate = new EventEmitter<void>();\n\n  displayedColumns: string[] = ['team1', 'score1', 'score2', 'team2']\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  checkValid() {\n    this.tableUpdate.next()\n    for (let match of this.round.data) {\n      if (!match.isValid()) {\n        this.isValid.emit(false);\n        return;\n      }\n    }\n    this.isValid.emit(true);\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Matchup } from 'src/app/shared/matchup.model';\nimport { Team } from 'src/app/shared/team.model';\nimport { TeamDbService } from 'src/app/team-db.service';\n\n@Component({\n  selector: 'app-swiss-opponent',\n  templateUrl: './swiss-opponent.component.html',\n  styleUrls: ['./swiss-opponent.component.scss']\n})\nexport class SwissOpponentComponent implements OnInit {\n  @Input() teamIndex!: number;\n  @Input() matchup!: Matchup;\n  opponent: number = 0;\n  wins: number = 0;\n  losses: number = 0;\n  opponentTeam: Team = new Team();\n  constructor(private teamDb: TeamDbService) {\n  }\n\n  ngOnInit(): void {\n    this.opponent = this.teamIndex === this.matchup.team1 ? this.matchup.team2 : this.matchup.team1;\n    this.wins = this.teamIndex === this.matchup.team1 ? this.matchup.team1Wins : this.matchup.team2Wins\n    this.losses = this.teamIndex === this.matchup.team1 ? this.matchup.team2Wins : this.matchup.team1Wins\n    this.opponentTeam = this.teamDb.getTeam(this.opponent);\n  }\n\n}\n","<mat-chip-list>\n    <mat-chip [color]=\"this.wins > this.losses ? 'primary' : 'accent'\" selected>\n        <img matChipAvatar src=\"{{ opponentTeam.imagePath }}\" alt=\"{{ opponentTeam.teamName }}\" />\n        {{ wins }} - {{losses}}\n    </mat-chip>\n</mat-chip-list>","<table mat-table [dataSource]=\"teams\">\n    <ng-container matColumnDef=\"seed\">\n        <th mat-header-cell *matHeaderCellDef>Seed</th>\n        <td mat-cell *matCellDef=\"let element\"> {{ this.teamDb.getTeam(element.teamIndex).seed }} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"teamName\">\n        <th mat-header-cell *matHeaderCellDef>Team Name</th>\n        <td mat-cell *matCellDef=\"let element\">\n            <app-team [id]=\"element.teamIndex\"></app-team>\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"Round 1\">\n        <th mat-header-cell *matHeaderCellDef>Round 1</th>\n        <td mat-cell *matCellDef=\"let element\">\n            <app-swiss-opponent [teamIndex]=\"element.teamIndex\" [matchup]=\"element.swissMatchup[0]\">\n            </app-swiss-opponent>\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"Round 2\">\n        <th mat-header-cell *matHeaderCellDef>Round 2</th>\n        <td mat-cell *matCellDef=\"let element\">\n            <app-swiss-opponent *ngIf=\"element.swissMatchup[1]\" [teamIndex]=\"element.teamIndex\"\n                [matchup]=\"element.swissMatchup[1]\">\n            </app-swiss-opponent>\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"Round 3\">\n        <th mat-header-cell *matHeaderCellDef>Round 3</th>\n        <td mat-cell *matCellDef=\"let element\">\n            <app-swiss-opponent *ngIf=\"element.swissMatchup[2]\" [teamIndex]=\"element.teamIndex\"\n                [matchup]=\"element.swissMatchup[2]\">\n            </app-swiss-opponent>\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"Round 4\">\n        <th mat-header-cell *matHeaderCellDef>Round 4</th>\n        <td mat-cell *matCellDef=\"let element\">\n            <app-swiss-opponent *ngIf=\"element.swissMatchup[3]\" [teamIndex]=\"element.teamIndex\"\n                [matchup]=\"element.swissMatchup[3]\">\n            </app-swiss-opponent>\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"Round 5\">\n        <th mat-header-cell *matHeaderCellDef>Round 5</th>\n        <td mat-cell *matCellDef=\"let element\">\n            <app-swiss-opponent *ngIf=\"element.swissMatchup[4]\" [teamIndex]=\"element.teamIndex\"\n                [matchup]=\"element.swissMatchup[4]\">\n            </app-swiss-opponent>\n        </td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\" displayedColumns\">\n    </tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>","import { Component, Input, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { SwissTeam } from 'src/app/shared/swiss-team.model';\nimport { TeamDbService } from 'src/app/team-db.service';\n\n@Component({\n  selector: 'app-leader-board',\n  templateUrl: './leader-board.component.html',\n  styleUrls: ['./leader-board.component.scss']\n})\nexport class LeaderBoardComponent implements OnInit {\n  @Input() teams!: MatTableDataSource<SwissTeam>;\n  @Input() displayedColumns: string[] = ['teamName', 'Round 1']\n\n  constructor(public teamDb: TeamDbService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { SwissTeam } from 'src/app/shared/swiss-team.model';\nimport { Matchup } from 'src/app/shared/matchup.model';\nimport { Subject, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-swiss-stage',\n  templateUrl: './swiss-stage.component.html',\n  styleUrls: ['./swiss-stage.component.scss']\n})\nexport class SwissStageComponent implements OnInit, OnDestroy {\n  // displayedColumns: string[] = ['seed', 'teamName', 'Round 1', 'Round 2', 'Round 3', 'Round 4', 'Round 5']\n  @Input() loadBracket!: Subject<void>;\n  @Output() teamsTop8 = new EventEmitter<number[]>();\n  sub!: Subscription;\n  displayedColumns: string[] = ['teamName', 'Round 1']\n  teamsUnsorted: SwissTeam[] = []\n  teamsSorted = new MatTableDataSource<SwissTeam>([]);\n\n  round1 = new MatTableDataSource<Matchup>([]);\n\n  round2High = new MatTableDataSource<Matchup>([]);\n  round2Low = new MatTableDataSource<Matchup>([]);\n  round2HighValid = false;\n  round2LowValid = false;\n\n  round3High = new MatTableDataSource<Matchup>([]);\n  round3Mid = new MatTableDataSource<Matchup>([]);\n  round3Low = new MatTableDataSource<Matchup>([]);\n  round3HighValid = false;\n  round3MidValid = false;\n  round3LowValid = false;\n\n  round4High = new MatTableDataSource<Matchup>([]);\n  round4Low = new MatTableDataSource<Matchup>([]);\n  round4HighValid = false;\n  round4LowValid = false;\n\n  round5 = new MatTableDataSource<Matchup>([]);\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.sub = this.loadBracket.subscribe(() => {\n      let teams = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n      for (let t of teams) {\n        this.teamsUnsorted.push(new SwissTeam(t, []));\n      }\n      this.teamsSorted.data = this.teamsUnsorted.slice().sort(SwissTeam.sortFunctionAllMatches);\n      this.initiateBracket();\n\n    });\n  }\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n  resetTable() {\n    this.teamsUnsorted = [];\n    this.teamsSorted = new MatTableDataSource<SwissTeam>([]);\n    this.round1 = new MatTableDataSource<Matchup>([]);\n\n    this.round2High = new MatTableDataSource<Matchup>([]);\n    this.round2Low = new MatTableDataSource<Matchup>([]);\n    this.round2HighValid = false;\n    this.round2LowValid = false;\n\n    this.round3High = new MatTableDataSource<Matchup>([]);\n    this.round3Mid = new MatTableDataSource<Matchup>([]);\n    this.round3Low = new MatTableDataSource<Matchup>([]);\n    this.round3HighValid = false;\n    this.round3MidValid = false;\n    this.round3LowValid = false;\n\n    this.round4High = new MatTableDataSource<Matchup>([]);\n    this.round4Low = new MatTableDataSource<Matchup>([]);\n    this.round4HighValid = false;\n    this.round4LowValid = false;\n\n    this.round5 = new MatTableDataSource<Matchup>([]);\n  }\n\n  refreshData() {\n    let teams = this.teamsSorted.data.slice().sort(SwissTeam.sortFunctionAllMatches);\n    this.teamsSorted.data = []\n    this.teamsSorted.data = teams\n  }\n\n  initiateBracket() {\n    this.round1.data = this.fillTeams(this.teamsUnsorted)\n  }\n\n  generateRound2() {\n    for (let t of this.teamsUnsorted) {\n      t.swissMatchup = t.swissMatchup.slice(0, 1)\n      t.update()\n    }\n\n    let teamsHigh: SwissTeam[] = []\n    let teamsLow: SwissTeam[] = []\n    for (let m of this.round1.data) {\n      const [a, b] = Matchup.teamWon(m)\n      teamsHigh.push(this.teamsUnsorted[a]);\n      teamsLow.push(this.teamsUnsorted[b]);\n    }\n\n    teamsHigh.sort(SwissTeam.sortFunctionSwissRound)\n    teamsLow.sort(SwissTeam.sortFunctionSwissRound)\n\n    this.round2High.data = this.fillTeams(teamsHigh);\n    this.round2Low.data = this.fillTeams(teamsLow);\n    this.refreshData()\n  }\n\n  initiateRound2(valid: boolean) {\n    if (!valid) {\n      return;\n    }\n    this.generateRound2()\n    if (this.displayedColumns.length < 3) {\n      this.displayedColumns.push('Round 2')\n    }\n  }\n  round2H(b: boolean) {\n    this.round2HighValid = b;\n    this.initiateRound3();\n  }\n  round2L(b: boolean) {\n    this.round2LowValid = b;\n    this.initiateRound3();\n  }\n  initiateRound3() {\n    if (this.round2HighValid && this.round2LowValid) {\n      this.generateRound3()\n      if (this.displayedColumns.length < 4) {\n        this.displayedColumns.push('Round 3')\n      }\n      this.refreshData()\n    }\n  }\n\n  generateRound3() {\n    for (let t of this.teamsUnsorted) {\n      t.swissMatchup = t.swissMatchup.slice(0, 2)\n      t.update()\n    }\n    let teamsHigh: SwissTeam[] = []\n    let teamsMid: SwissTeam[] = []\n    let teamsLow: SwissTeam[] = []\n    for (let m of this.round2High.data) {\n      const [a, b] = Matchup.teamWon(m)\n      teamsHigh.push(this.teamsUnsorted[a]);\n      teamsMid.push(this.teamsUnsorted[b]);\n    }\n    for (let m of this.round2Low.data) {\n      const [a, b] = Matchup.teamWon(m)\n      teamsMid.push(this.teamsUnsorted[a]);\n      teamsLow.push(this.teamsUnsorted[b]);\n    }\n\n    teamsHigh.sort(SwissTeam.sortFunctionSwissRound)\n    teamsMid.sort(SwissTeam.sortFunctionSwissRound)\n    teamsLow.sort(SwissTeam.sortFunctionSwissRound)\n\n    this.round3High.data = this.fillTeams(teamsHigh)\n    this.round3Mid.data = this.fillTeams(teamsMid)\n    this.round3Low.data = this.fillTeams(teamsLow)\n  }\n\n  round3H(b: boolean) {\n    this.round3HighValid = b\n    this.initiateRound4()\n  }\n  round3M(b: boolean) {\n    this.round3MidValid = b\n    this.initiateRound4()\n  }\n  round3L(b: boolean) {\n    this.round3LowValid = b\n    this.initiateRound4()\n  }\n  initiateRound4() {\n    if (this.round3HighValid && this.round3MidValid && this.round3LowValid) {\n      this.generateRound4()\n      if (this.displayedColumns.length < 5) {\n        this.displayedColumns.push('Round 4')\n      }\n      this.refreshData()\n    }\n  }\n\n  generateRound4() {\n    for (let t of this.teamsUnsorted) {\n      t.swissMatchup = t.swissMatchup.slice(0, 3)\n      t.update()\n    }\n    let teamsHigh: SwissTeam[] = []\n    let teamsLow: SwissTeam[] = []\n\n    for (let m of this.round3High.data) {\n      const [a, b] = Matchup.teamWon(m)\n      teamsHigh.push(this.teamsUnsorted[b]);\n    }\n    for (let m of this.round3Mid.data) {\n      const [a, b] = Matchup.teamWon(m)\n      teamsHigh.push(this.teamsUnsorted[a]);\n      teamsLow.push(this.teamsUnsorted[b]);\n    }\n    for (let m of this.round3Low.data) {\n      const [a, b] = Matchup.teamWon(m)\n      teamsLow.push(this.teamsUnsorted[a]);\n    }\n\n    teamsHigh.sort(SwissTeam.sortFunctionSwissRound)\n    teamsLow.sort(SwissTeam.sortFunctionSwissRound)\n\n    this.round4High.data = this.fillTeams(teamsHigh)\n    this.round4Low.data = this.fillTeams(teamsLow)\n  }\n  round4H(b: boolean) {\n    this.round4HighValid = b;\n    this.initiateRound5();\n  }\n  round4L(b: boolean) {\n    this.round4LowValid = b;\n    this.initiateRound5();\n  }\n  initiateRound5() {\n    if (this.round4HighValid && this.round4LowValid) {\n      this.generateRound5()\n      this.refreshData()\n      if (this.displayedColumns.length < 6) {\n        this.displayedColumns.push('Round 5')\n      }\n    }\n  }\n  generateRound5() {\n    for (let t of this.teamsUnsorted) {\n      t.swissMatchup = t.swissMatchup.slice(0, 4)\n      t.update()\n    }\n\n    let teams: SwissTeam[] = []\n\n    for (let m of this.round4High.data) {\n      const [a, b] = Matchup.teamWon(m)\n      teams.push(this.teamsUnsorted[b]);\n    }\n    for (let m of this.round4Low.data) {\n      const [a, b] = Matchup.teamWon(m)\n      teams.push(this.teamsUnsorted[a]);\n    }\n    teams.sort(SwissTeam.sortFunctionSwissRound)\n\n    this.round5.data = this.fillTeams(teams)\n  }\n  round5Val(b: boolean) {\n    if (b) {\n      this.refreshData();\n      let teams: number[] = []\n      for (let t of this.teamsSorted.data.slice(0, 8)) {\n        teams.push(t.teamIndex)\n      }\n      this.teamsTop8.next(teams)\n    }\n  }\n\n  testButton() {\n  }\n\n  fillTeams(teamsArr: SwissTeam[]): Matchup[] {\n    let swissArr: Matchup[] = [];\n    let func = (teamsArr: SwissTeam[]): Matchup[] | undefined => {\n      if (teamsArr.length < 1) {\n        return [];\n      }\n\n      let team1Index = teamsArr[0].teamIndex;\n\n      for (var i = 0; i < teamsArr.length - 1; i++) {\n        let team2Index = teamsArr[teamsArr.length - 1 - i].teamIndex;\n\n        if (this.teamsUnsorted[team2Index].teamBlacklist.find((element) => { return element == team1Index }) !== undefined) { continue; }\n\n        let arr = func(teamsArr.slice(1, teamsArr.length - 1 - i).concat(teamsArr.slice(teamsArr.length - i)))\n\n        if (arr === undefined) { continue; }\n\n        let temp = [new Matchup(team1Index, team2Index)]\n        temp.push(...arr);\n        return temp;\n      }\n      return undefined;\n    }\n\n    let matchups = func(teamsArr);\n\n    if (matchups === undefined) {\n      console.log(\"matchups undefined\")\n      for (var i = 0; i < teamsArr.length / 2; i++) {\n        let team1Index = teamsArr[i].teamIndex;\n        let team2Index = teamsArr[teamsArr.length - 1 - i].teamIndex;\n        let match = new Matchup(team1Index, team2Index)\n        swissArr[i] = match;\n        this.teamsUnsorted[team1Index].swissMatchup.push(match);\n        this.teamsUnsorted[team2Index].swissMatchup.push(match);\n      }\n    } else {\n      swissArr = matchups\n      for (let match of swissArr) {\n        let team1Index = match.team1;\n        let team2Index = match.team2;\n\n        this.teamsUnsorted[team1Index].swissMatchup.push(match);\n        this.teamsUnsorted[team2Index].swissMatchup.push(match);\n      }\n    }\n    return swissArr;\n\n  }\n}\n","<mat-toolbar>\n    Swiss Stage\n</mat-toolbar>\n<div class=\"container\">\n    <div class=\"item\" style=\"flex-grow: 1;\">\n        <app-leader-board [teams]=\"teamsSorted\" [displayedColumns]=\"displayedColumns\"></app-leader-board>\n    </div>\n    <div class=\"item\" style=\"flex-grow: 2;\">\n        <mat-toolbar>\n            Round 1\n        </mat-toolbar>\n        <!-- Round 1 -->\n        <app-swiss-matchup [round]=\"round1\" (isValid)=\"initiateRound2($event)\" (tableUpdate)=\"refreshData()\"\n            style=\"width: 100%;\"></app-swiss-matchup>\n\n        <!-- Round 2 -->\n        <mat-toolbar>\n            Round 2\n        </mat-toolbar>\n        <div class=\"container\">\n            <div class=\"item\" style=\"flex-grow: 1;\">\n                <mat-card>\n                    <mat-card-title>High</mat-card-title>\n                    <mat-card-content>\n                        <app-swiss-matchup [round]=\"round2High\" (isValid)=\"round2H($event)\" style=\"width: 100%;\">\n                        </app-swiss-matchup>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n            <div class=\"item\" style=\"flex-grow: 1;\">\n                <mat-card>\n                    <mat-card-title>Low</mat-card-title>\n                    <mat-card-content>\n                        <app-swiss-matchup [round]=\"round2Low\" (isValid)=\"round2L($event)\" style=\"width: 100%;\">\n                        </app-swiss-matchup>\n                    </mat-card-content>\n                </mat-card>\n\n            </div>\n        </div>\n        <!-- Round 3 -->\n        <mat-toolbar>\n            Round 3\n        </mat-toolbar>\n        <div class=\"container\">\n            <div class=\"item\" style=\"flex-grow: 1;\">\n                <mat-card>\n                    <mat-card-title>High</mat-card-title>\n                    <mat-card-content>\n                        <app-swiss-matchup [round]=\"round3High\" (isValid)=\"round3H($event)\" style=\"width: 100%;\">\n                        </app-swiss-matchup>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n            <div class=\"item\" style=\"flex-grow: 1;\">\n                <mat-card>\n                    <mat-card-title>Mid</mat-card-title>\n                    <mat-card-content>\n                        <app-swiss-matchup [round]=\"round3Mid\" (isValid)=\"round3M($event)\" style=\"width: 100%;\">\n                        </app-swiss-matchup>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n            <div class=\"item\" style=\"flex-grow: 1;\">\n                <mat-card>\n                    <mat-card-title>Low</mat-card-title>\n                    <mat-card-content>\n                        <app-swiss-matchup [round]=\"round3Low\" (isValid)=\"round3L($event)\" style=\"width: 100%;\">\n                        </app-swiss-matchup>\n                    </mat-card-content>\n                </mat-card>\n\n            </div>\n        </div>\n\n        <!-- Round 4 -->\n        <mat-toolbar>\n            Round 4\n        </mat-toolbar>\n        <div class=\"container\">\n            <div class=\"item\" style=\"flex-grow: 1;\">\n                <mat-card>\n                    <mat-card-title>High</mat-card-title>\n                    <mat-card-content>\n                        <app-swiss-matchup [round]=\"round4High\" (isValid)=\"round4H($event)\" style=\"width: 100%;\">\n                        </app-swiss-matchup>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n            <div class=\"item\" style=\"flex-grow: 1;\">\n                <mat-card>\n                    <mat-card-title>Low</mat-card-title>\n                    <mat-card-content>\n                        <app-swiss-matchup [round]=\"round4Low\" (isValid)=\"round4L($event)\" style=\"width: 100%;\">\n                        </app-swiss-matchup>\n                    </mat-card-content>\n                </mat-card>\n\n            </div>\n        </div>\n        <!-- Round 2 -->\n        <mat-toolbar>\n            Round 5\n        </mat-toolbar>\n        <div class=\"container\">\n            <div class=\"item\" style=\"flex-grow: 1;\">\n                <mat-card>\n                    <mat-card-title>High</mat-card-title>\n                    <mat-card-content>\n                        <app-swiss-matchup [round]=\"round5\" (isValid)=\"this.round5Val($event)\" style=\"width: 100%;\">\n                        </app-swiss-matchup>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Subject } from './Subject';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class ReplaySubject extends Subject {\n    constructor(_bufferSize = Infinity, _windowTime = Infinity, _timestampProvider = dateTimestampProvider) {\n        super();\n        this._bufferSize = _bufferSize;\n        this._windowTime = _windowTime;\n        this._timestampProvider = _timestampProvider;\n        this._buffer = [];\n        this._infiniteTimeWindow = true;\n        this._infiniteTimeWindow = _windowTime === Infinity;\n        this._bufferSize = Math.max(1, _bufferSize);\n        this._windowTime = Math.max(1, _windowTime);\n    }\n    next(value) {\n        const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n        if (!isStopped) {\n            _buffer.push(value);\n            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n        }\n        this._trimBuffer();\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._trimBuffer();\n        const subscription = this._innerSubscribe(subscriber);\n        const { _infiniteTimeWindow, _buffer } = this;\n        const copy = _buffer.slice();\n        for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n            subscriber.next(copy[i]);\n        }\n        this._checkFinalizedStatuses(subscriber);\n        return subscription;\n    }\n    _trimBuffer() {\n        const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n        const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n        if (!_infiniteTimeWindow) {\n            const now = _timestampProvider.now();\n            let last = 0;\n            for (let i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n                last = i;\n            }\n            last && _buffer.splice(0, last + 1);\n        }\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Component({\n  selector: 'app-single-matchup',\n  templateUrl: './single-matchup.component.html',\n  styleUrls: ['./single-matchup.component.scss']\n})\nexport class SingleMatchupComponent implements OnInit {\n  @Input() team: ReplaySubject<number> | number = -1;\n  @Input() top!: number;\n  @Output() teamWon = new EventEmitter<void>();\n  teamScore = 0;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  checkWin() {\n    if (this.teamScore === 4) {\n      this.teamWon.next();\n    }\n  }\n\n}\n","<li class=\"\" [ngClass]=\"top ? 'game game-top' : 'game game-bottom'\">\n    <app-team [id]=\"team\"></app-team>\n    <mat-form-field>\n        <!-- <mat-select [(value)]=\"teamScore\" (selectionChange)=\"this.checkWin()\">\n            <mat-option [value]=\"0\">0</mat-option>\n            <mat-option [value]=\"1\">1</mat-option>\n            <mat-option [value]=\"2\">2</mat-option>\n            <mat-option [value]=\"3\">3</mat-option>\n            <mat-option [value]=\"4\">4</mat-option>\n        </mat-select> -->\n        <input matInput type=\"number\" [(ngModel)]=\"teamScore\" (input)=\"this.checkWin()\" min=\"0\" max=\"4\">\n    </mat-form-field>\n</li>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { last, ReplaySubject, Subject, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-single-elim',\n  templateUrl: './single-elim.component.html',\n  styleUrls: ['./single-elim.component.scss']\n})\nexport class SingleElimComponent implements OnInit, OnDestroy {\n  @Input() teamsSubject!: Subject<number[]>;\n  teams = Array<ReplaySubject<number>>(8);\n  teamsChanged!: Subscription;\n\n  match1Winner = new ReplaySubject<number>();\n  match2Winner = new ReplaySubject<number>();\n  match3Winner = new ReplaySubject<number>();\n  match4Winner = new ReplaySubject<number>();\n\n  round2Match1Winner = new ReplaySubject<number>();\n  round2Match2Winner = new ReplaySubject<number>();\n\n  winner = new ReplaySubject<number>();\n\n  constructor() {\n    for (let i = 0; i < 8; i++) {\n      this.teams[i] = new ReplaySubject<number>()\n    }\n  }\n  ngOnDestroy(): void {\n    this.teamsChanged.unsubscribe()\n  }\n\n  ngOnInit(): void {\n    // for (let i = 0; i < 8; i++) {\n    //   this.teams[i].next(i)\n    // }\n    this.teamsChanged = this.teamsSubject.subscribe((arr: number[]) => {\n      for (let i = 0; i < arr.length && i < this.teams.length; i++) {\n        this.teams[i].next(arr[i])\n      }\n    });\n  }\n\n  updateResults(input: ReplaySubject<number>, output: ReplaySubject<number>) {\n    let sub = input.subscribe((val) => {\n      output.next(val);\n    })\n    sub.unsubscribe();\n  }\n\n}\n","<mat-toolbar>\n    Single Elimination Stage\n</mat-toolbar>\n<div class=\"container\">\n    <div class=\"tournament\">\n        <ul class=\"round round-2\">\n            <li class=\"spacer\">&nbsp;</li>\n\n            <app-single-matchup [top]=\"1\" [team]=\"this.teams[0]\" (teamWon)=\"updateResults(this.teams[0], match1Winner)\">\n            </app-single-matchup>\n            <li class=\"game game-spacer\">&nbsp;</li>\n            <app-single-matchup [top]=\"0\" [team]=\"this.teams[7]\" (teamWon)=\"updateResults(this.teams[7], match1Winner)\">\n            </app-single-matchup>\n\n            <li class=\"spacer\">&nbsp;</li>\n\n            <app-single-matchup [top]=\"1\" [team]=\"this.teams[3]\" (teamWon)=\"updateResults(this.teams[3], match2Winner)\">\n            </app-single-matchup>\n            <li class=\"game game-spacer\">&nbsp;</li>\n            <app-single-matchup [top]=\"0\" [team]=\"this.teams[4]\" (teamWon)=\"updateResults(this.teams[4], match2Winner)\">\n            </app-single-matchup>\n\n            <li class=\"spacer\">&nbsp;</li>\n\n            <app-single-matchup [top]=\"1\" [team]=\"this.teams[1]\" (teamWon)=\"updateResults(this.teams[1], match3Winner)\">\n            </app-single-matchup>\n            <li class=\"game game-spacer\">&nbsp;</li>\n            <app-single-matchup [top]=\"0\" [team]=\"this.teams[6]\" (teamWon)=\"updateResults(this.teams[6], match3Winner)\">\n            </app-single-matchup>\n\n            <li class=\"spacer\">&nbsp;</li>\n\n            <app-single-matchup [top]=\"1\" [team]=\"this.teams[2]\" (teamWon)=\"updateResults(this.teams[2], match4Winner)\">\n            </app-single-matchup>\n            <li class=\"game game-spacer\">&nbsp;</li>\n            <app-single-matchup [top]=\"0\" [team]=\"this.teams[5]\" (teamWon)=\"updateResults(this.teams[5], match4Winner)\">\n            </app-single-matchup>\n\n            <li class=\"spacer\">&nbsp;</li>\n        </ul>\n        <ul class=\"round round-3\">\n            <li class=\"spacer\">&nbsp;</li>\n\n            <app-single-matchup [top]=\"1\" [team]=\"match1Winner\"\n                (teamWon)=\"updateResults(match1Winner, round2Match1Winner)\">\n            </app-single-matchup>\n            <li class=\"game game-spacer\">&nbsp;</li>\n            <app-single-matchup [top]=\"0\" [team]=\"match2Winner\"\n                (teamWon)=\"updateResults(match2Winner, round2Match1Winner)\">\n            </app-single-matchup>\n\n            <li class=\"spacer\">&nbsp;</li>\n\n            <app-single-matchup [top]=\"1\" [team]=\"match3Winner\"\n                (teamWon)=\"updateResults(match3Winner, round2Match2Winner)\">\n            </app-single-matchup>\n            <li class=\"game game-spacer\">&nbsp;</li>\n            <app-single-matchup [top]=\"0\" [team]=\"match4Winner\"\n                (teamWon)=\"updateResults(match4Winner, round2Match2Winner)\">\n            </app-single-matchup>\n\n            <li class=\"spacer\">&nbsp;</li>\n        </ul>\n        <ul class=\"round round-4\">\n            <li class=\"spacer\">&nbsp;</li>\n\n            <app-single-matchup [top]=\"1\" [team]=\"round2Match1Winner\"\n                (teamWon)=\"updateResults(round2Match1Winner, winner)\">\n            </app-single-matchup>\n            <li class=\"game game-spacer\">&nbsp;</li>\n            <app-single-matchup [top]=\"0\" [team]=\"round2Match2Winner\"\n                (teamWon)=\"updateResults(round2Match2Winner, winner)\">\n            </app-single-matchup>\n\n            <li class=\"spacer\">&nbsp;</li>\n        </ul>\n        <ul class=\"round round-5\">\n            <li class=\"spacer\">&nbsp;</li>\n\n            <app-team [id]=\"winner\"></app-team>\n\n            <li class=\"spacer\">&nbsp;</li>\n        </ul>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SwissToSingleComponent } from './swiss-to-single.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SwissToSingleComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SwissToSingleRoutingModule { }","import { Component, EventEmitter, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Subject, Subscription } from 'rxjs';\nimport { TeamDbService } from '../team-db.service';\n\n@Component({\n  selector: 'app-swiss-to-single',\n  templateUrl: './swiss-to-single.component.html',\n  styleUrls: ['./swiss-to-single.component.scss']\n})\nexport class SwissToSingleComponent implements OnInit {\n  private params: string[] = [];\n  private teamsTop16: number[] = [];\n  private teamsChanged: Subscription;\n  teamsTop8 = new Subject<number[]>();\n  initiateBracket = new EventEmitter<void>()\n\n  constructor(private teamsDb: TeamDbService, private route: ActivatedRoute) {\n    this.teamsChanged = this.teamsDb.teamsChanged.subscribe(() => {\n      this.teamsTop16 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n      this.initiateBracket.next()\n    });\n  }\n  ngOnDestroy(): void {\n    this.teamsChanged.unsubscribe();\n  }\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params: Params) => {\n      let param: string = params['teams']\n      if (param === undefined) {\n        return;\n      }\n      this.params = param.split(' ')\n      this.teamsDb.initiateTeamsDb(this.params)\n    })\n  }\n\n  getTeams() {\n    return this.teamsTop16.slice()\n  }\n\n  setTop8(teams: number[]) {\n    this.teamsTop8.next(teams)\n  }\n\n}\n","<div class=\"container\">\n    <app-swiss-stage class=\"item\" [loadBracket]=\"this.initiateBracket\" (teamsTop8)=\"setTop8($event)\"></app-swiss-stage>\n    <app-single-elim class=\"item\" [teamsSubject]=\"this.teamsTop8\"></app-single-elim>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SwissToSingleComponent } from './swiss-to-single.component';\nimport { SwissStageComponent } from './swiss-stage/swiss-stage.component';\nimport { SwissOpponentComponent } from './swiss-stage/swiss-opponent/swiss-opponent.component';\nimport { SwissMatchupComponent } from './swiss-stage/swiss-matchup/swiss-matchup.component';\nimport { LeaderBoardComponent } from './swiss-stage/leader-board/leader-board.component';\nimport { SingleElimComponent } from './single-elim/single-elim.component';\nimport { SingleMatchupComponent } from './single-elim/single-matchup/single-matchup.component';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { SharedModule } from '../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SwissToSingleRoutingModule } from './swiss-to-single-routing.module';\n\n\n\n@NgModule({\n  declarations: [\n    SwissToSingleComponent,\n    SwissStageComponent,\n    SwissOpponentComponent,\n    SwissMatchupComponent,\n    LeaderBoardComponent,\n    SingleElimComponent,\n    SingleMatchupComponent,\n  ],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatCardModule,\n    MatTableModule,\n    MatChipsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    HttpClientModule,\n    MatRippleModule,\n    SharedModule,\n    SwissToSingleRoutingModule\n  ]\n})\nexport class SwissToSingleModule { }\n"],"x_google_ignoreList":[9]}