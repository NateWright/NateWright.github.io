{"version":3,"file":"src_app_swiss-to-single_swiss-to-single_module_ts.js","mappings":"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","names":["Matchup","constructor","team1","team2","team1Wins","team2Wins","this","isValid","static","index","match","checkWinDiff","SwissTeam","swissMatchups","teamIndex","swissMatchup","update","gameDiff","length","m","matchup","a","b","teamBlacklist","push","team1Losses","team2Losses","team1Dif","team2Dif","team1Win","team2Win","i0","TeamComponent","teamDb","ngOnDestroy","idSub","unsubscribe","ngOnInit","id","team","getTeam","subscribe","val","selectors","SwissMatchupComponent","EventEmitter","checkValid","tableUpdate","next","round","data","emit","SwissOpponentComponent","Team","opponent","wins","losses","opponentTeam","LeaderBoardComponent","SwissStageComponent","MatTableDataSource","sub","loadBracket","teams","t","teamsUnsorted","teamsSorted","slice","sort","initiateBracket","resetTable","round1","round2High","round2Low","round2HighValid","round2LowValid","round3High","round3Mid","round3Low","round3HighValid","round3MidValid","round3LowValid","round4High","round4Low","round4HighValid","round4LowValid","round5","refreshData","fillTeams","generateRound2","teamsHigh","teamsLow","initiateRound2","valid","displayedColumns","round2H","initiateRound3","round2L","generateRound3","teamsMid","round3H","initiateRound4","round3M","round3L","generateRound4","round4H","initiateRound5","round4L","generateRound5","round5Val","teamsTop8","testButton","teamsArr","swissArr","func","team1Index","i","team2Index","undefined","find","element","arr","concat","temp","matchups","console","log","ctx","ReplaySubject","Subject","_bufferSize","Infinity","_windowTime","_timestampProvider","dateTimestampProvider","super","_buffer","_infiniteTimeWindow","Math","max","value","isStopped","now","_trimBuffer","_subscribe","subscriber","_throwIfClosed","subscription","_innerSubscribe","copy","closed","_checkFinalizedStatuses","adjustedBufferSize","splice","last","SingleMatchupComponent","checkWin","teamScore","teamWon","SingleElimComponent","Array","teamsChanged","teamsSubject","updateResults","input","output","routes","path","component","SwissToSingleComponent","teamsDb","route","teamsTop16","queryParams","params","param","split","initiateTeamsDb","getTeams","setTop8","SwissToSingleRoutingModule","RouterModule","SwissToSingleModule","FormsModule","CommonModule","MatToolbarModule","MatButtonModule","MatGridListModule","MatCardModule","MatTableModule","MatChipsModule","MatInputModule","MatFormFieldModule","MatSelectModule","HttpClientModule","SharedModule"],"sourceRoot":"webpack:///","sources":["./src/app/shared/matchup.model.ts","./src/app/shared/swiss-team.model.ts","./src/app/shared/team/team.component.html","./src/app/shared/team/team.component.ts","./src/app/swiss-to-single/swiss-stage/swiss-matchup/swiss-matchup.component.html","./src/app/swiss-to-single/swiss-stage/swiss-matchup/swiss-matchup.component.ts","./src/app/swiss-to-single/swiss-stage/swiss-opponent/swiss-opponent.component.ts","./src/app/swiss-to-single/swiss-stage/swiss-opponent/swiss-opponent.component.html","./src/app/swiss-to-single/swiss-stage/leader-board/leader-board.component.html","./src/app/swiss-to-single/swiss-stage/leader-board/leader-board.component.ts","./src/app/swiss-to-single/swiss-stage/swiss-stage.component.ts","./src/app/swiss-to-single/swiss-stage/swiss-stage.component.html","./node_modules/rxjs/dist/esm/internal/ReplaySubject.js","./src/app/swiss-to-single/single-elim/single-matchup/single-matchup.component.ts","./src/app/swiss-to-single/single-elim/single-matchup/single-matchup.component.html","./src/app/swiss-to-single/single-elim/single-elim.component.ts","./src/app/swiss-to-single/single-elim/single-elim.component.html","./src/app/swiss-to-single/swiss-to-single-routing.module.ts","./src/app/swiss-to-single/swiss-to-single.component.ts","./src/app/swiss-to-single/swiss-to-single.component.html","./src/app/swiss-to-single/swiss-to-single.module.ts"],"sourcesContent":["export class Matchup {\n    public team1: number;\n    public team2: number;\n    public team1Wins: number;\n    public team2Wins: number;\n    constructor(team1 = -1, team2 = -1, team1Wins = 0, team2Wins = 0) {\n        this.team1 = team1;\n        this.team2 = team2;\n        this.team1Wins = team1Wins;\n        this.team2Wins = team2Wins;\n    }\n\n    isValid(): boolean {\n        return (this.team1Wins > this.team2Wins || this.team1Wins < this.team2Wins) && (this.team1Wins === 3 || this.team2Wins === 3)\n    }\n\n    static checkWin(index: number, match: Matchup): boolean {\n        return Matchup.checkWinDiff(index, match) > 0;\n    }\n\n    static checkWinDiff(index: number, match: Matchup) {\n        return index === match.team1 ? match.team1Wins - match.team2Wins : match.team2Wins - match.team1Wins;\n    }\n    static teamWon(match: Matchup) {\n        if (match.team1Wins > match.team2Wins) {\n            return [match.team1, match.team2]\n        }\n        return [match.team2, match.team1]\n    }\n}","import { Matchup } from \"./matchup.model\";\n\nexport class SwissTeam {\n    teamIndex: number;\n    swissMatchup: Matchup[] = [];\n    gameDiff: number = 0;\n    teamBlacklist: number[] = []\n\n    constructor(index: number, swissMatchups: Matchup[]) {\n        this.teamIndex = index;\n        this.swissMatchup = swissMatchups;\n    }\n\n    update() {\n        this.gameDiff = 0;\n        if (this.swissMatchup.length <= 0) return;\n        for (let m of this.swissMatchup) {\n            this.gameDiff += Matchup.checkWinDiff(this.teamIndex, m)\n        }\n        const matchup = this.swissMatchup[this.swissMatchup.length - 1]\n        const [a, b] = Matchup.teamWon(matchup)\n        if (this.teamIndex == a) {\n            this.teamBlacklist.push(b)\n        } else {\n            this.teamBlacklist.push(a)\n        }\n    }\n\n    static sortFunctionAllMatches(a: SwissTeam, b: SwissTeam): number {\n        let team1Wins = 0;\n        let team1Losses = 0;\n        let team2Wins = 0;\n        let team2Losses = 0;\n        for (let swissMatchup of a.swissMatchup) {\n            if (Matchup.checkWin(a.teamIndex, swissMatchup)) {\n                team1Wins++;\n            } else {\n                team1Losses++;\n            }\n        }\n        for (let swissMatchup of b.swissMatchup) {\n            if (Matchup.checkWin(b.teamIndex, swissMatchup)) {\n                team2Wins++;\n            } else {\n                team2Losses++;\n            }\n        }\n        if (team1Wins > team2Wins || team1Losses < team2Losses) {\n            return -1;\n        }\n        if (team1Wins < team2Wins || team1Losses > team2Losses) {\n            return 1;\n        }\n\n        const team1Dif = a.gameDiff\n        const team2Dif = b.gameDiff\n        if (team1Dif > team2Dif) {\n            return -1;\n        }\n        if (team2Dif > team1Dif) {\n            return 1;\n        }\n\n        // return a.teamIndex - b.teamIndex;\n        return a.teamIndex - b.teamIndex;\n    }\n\n    static sortFunctionSwissRound(a: SwissTeam, b: SwissTeam): number {\n        const team1Win = Matchup.checkWin(a.teamIndex, a.swissMatchup[a.swissMatchup.length - 1])\n        const team2Win = Matchup.checkWin(b.teamIndex, b.swissMatchup[b.swissMatchup.length - 1])\n        if (!team1Win && team2Win) {\n            return -1;\n        }\n        if (!team2Win && team1Win) {\n            return 1;\n        }\n        // const team1Dif = Matchup.checkWinDiff(a.teamIndex, a.swissMatchup[a.swissMatchup.length - 1]);\n        // const team2Dif = Matchup.checkWinDiff(b.teamIndex, b.swissMatchup[b.swissMatchup.length - 1]);\n        const team1Dif = a.gameDiff\n        const team2Dif = b.gameDiff\n\n        if (team1Dif > team2Dif) {\n            return -1;\n        }\n        if (team2Dif > team1Dif) {\n            return 1;\n        }\n\n        return a.teamIndex - b.teamIndex;\n    }\n}","<mat-chip-list *ngIf=\"team\">\n    <mat-chip color=\"accent\">\n        <img matChipAvatar src=\"{{ team.imagePath }}\" alt=\"{{ team.teamName }}\" />\n        {{ team.teamName }}\n    </mat-chip>\n</mat-chip-list>\n<mat-chip-list *ngIf=\"!team\">\n    <mat-chip color=\"accent\">\n        <img matChipAvatar src=\"assets/test-image.jpg\" alt=\"NONE\" />\n        {{ \"NONE\" }}\n    </mat-chip>\n</mat-chip-list>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { TeamDbService } from 'src/app/team-db.service';\nimport { Team } from '../team.model';\n\n@Component({\n  selector: 'app-team',\n  templateUrl: './team.component.html',\n  styleUrls: ['./team.component.scss']\n})\nexport class TeamComponent implements OnInit, OnDestroy {\n  @Input() id!: Subject<number> | number;\n  team!: Team;\n\n  idSub!: Subscription;\n\n  constructor(private teamDb: TeamDbService) {\n  }\n  ngOnDestroy(): void {\n    if (this.idSub) {\n      this.idSub.unsubscribe();\n    }\n  }\n\n  ngOnInit(): void {\n    if (typeof (this.id) === \"number\") {\n      this.team = this.teamDb.getTeam(this.id);\n    } else {\n      this.idSub = this.id.subscribe((val: number) => {\n        this.team = this.teamDb.getTeam(val);\n      })\n    }\n  }\n\n}\n","<table mat-table [dataSource]=\"round\">\n    <ng-container matColumnDef=\"team1\">\n        <th mat-header-cell *matHeaderCellDef>Team 1</th>\n        <td mat-cell *matCellDef=\"let element\">\n            <app-team [id]=\"element.team1\"></app-team>\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"score1\">\n        <th mat-header-cell *matHeaderCellDef>Wins</th>\n        <td mat-cell *matCellDef=\"let element\">\n            <mat-form-field appearance=\"fill\" color=\"primary\" style=\"width: 100px;\">\n                <mat-label>Score</mat-label>\n                <!-- <mat-select [(value)]=\"element.team1Wins\" (selectionChange)=\"this.checkValid()\">\n                    <mat-option [value]=\"0\">0</mat-option>\n                    <mat-option [value]=\"1\">1</mat-option>\n                    <mat-option [value]=\"2\">2</mat-option>\n                    <mat-option [value]=\"3\">3</mat-option>\n                </mat-select> -->\n                <input matInput type=\"number\" [(ngModel)]=\"element.team1Wins\" (input)=\"this.checkValid()\" min=\"0\"\n                    max=\"3\">\n            </mat-form-field>\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"score2\">\n        <th mat-header-cell *matHeaderCellDef>Losses</th>\n        <td mat-cell *matCellDef=\"let element\">\n            <mat-form-field appearance=\"fill\" color=\"primary\" style=\"width: 100px; padding: 0;\">\n                <mat-label>Score</mat-label>\n                <!-- <mat-select [(value)]=\"element.team2Wins\" (selectionChange)=\"this.checkValid()\">\n                    <mat-option [value]=\"0\">0</mat-option>\n                    <mat-option [value]=\"1\">1</mat-option>\n                    <mat-option [value]=\"2\">2</mat-option>\n                    <mat-option [value]=\"3\">3</mat-option>\n                </mat-select> -->\n                <input matInput type=\"number\" [(ngModel)]=\"element.team2Wins\" (input)=\"this.checkValid()\" min=\"0\"\n                    max=\"3\">\n            </mat-form-field>\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"team2\">\n        <th mat-header-cell *matHeaderCellDef>Team 2</th>\n        <td mat-cell *matCellDef=\"let element\">\n            <app-team [id]=\"element.team2\"></app-team>\n        </td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\" displayedColumns\">\n    </tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Matchup } from 'src/app/shared/matchup.model';\n\n@Component({\n  selector: 'app-swiss-matchup',\n  templateUrl: './swiss-matchup.component.html',\n  styleUrls: ['./swiss-matchup.component.scss']\n})\nexport class SwissMatchupComponent implements OnInit {\n  @Input() round!: MatTableDataSource<Matchup>;\n  @Output() isValid = new EventEmitter<boolean>();\n  @Output() tableUpdate = new EventEmitter<void>();\n\n  displayedColumns: string[] = ['team1', 'score1', 'score2', 'team2']\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  checkValid() {\n    this.tableUpdate.next()\n    for (let match of this.round.data) {\n      if (!match.isValid()) {\n        this.isValid.emit(false);\n        return;\n      }\n    }\n    this.isValid.emit(true);\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Matchup } from 'src/app/shared/matchup.model';\nimport { Team } from 'src/app/shared/team.model';\nimport { TeamDbService } from 'src/app/team-db.service';\n\n@Component({\n  selector: 'app-swiss-opponent',\n  templateUrl: './swiss-opponent.component.html',\n  styleUrls: ['./swiss-opponent.component.scss']\n})\nexport class SwissOpponentComponent implements OnInit {\n  @Input() teamIndex!: number;\n  @Input() matchup!: Matchup;\n  opponent: number = 0;\n  wins: number = 0;\n  losses: number = 0;\n  opponentTeam: Team = new Team();\n  constructor(private teamDb: TeamDbService) {\n  }\n\n  ngOnInit(): void {\n    this.opponent = this.teamIndex === this.matchup.team1 ? this.matchup.team2 : this.matchup.team1;\n    this.wins = this.teamIndex === this.matchup.team1 ? this.matchup.team1Wins : this.matchup.team2Wins\n    this.losses = this.teamIndex === this.matchup.team1 ? this.matchup.team2Wins : this.matchup.team1Wins\n    this.opponentTeam = this.teamDb.getTeam(this.opponent);\n  }\n\n}\n","<mat-chip-list>\n    <mat-chip [color]=\"this.wins > this.losses ? 'primary' : 'accent'\" selected>\n        <img matChipAvatar src=\"{{ opponentTeam.imagePath }}\" alt=\"{{ opponentTeam.teamName }}\" />\n        {{ wins }} - {{losses}}\n    </mat-chip>\n</mat-chip-list>","<table mat-table [dataSource]=\"teams\">\n    <ng-container matColumnDef=\"seed\">\n        <th mat-header-cell *matHeaderCellDef>Seed</th>\n        <td mat-cell *matCellDef=\"let element\"> {{ this.teamDb.getTeam(element.teamIndex).seed }} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"teamName\">\n        <th mat-header-cell *matHeaderCellDef>Team Name</th>\n        <td mat-cell *matCellDef=\"let element\">\n            <app-team [id]=\"element.teamIndex\"></app-team>\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"Round 1\">\n        <th mat-header-cell *matHeaderCellDef>Round 1</th>\n        <td mat-cell *matCellDef=\"let element\">\n            <app-swiss-opponent [teamIndex]=\"element.teamIndex\" [matchup]=\"element.swissMatchup[0]\">\n            </app-swiss-opponent>\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"Round 2\">\n        <th mat-header-cell *matHeaderCellDef>Round 2</th>\n        <td mat-cell *matCellDef=\"let element\">\n            <app-swiss-opponent *ngIf=\"element.swissMatchup[1]\" [teamIndex]=\"element.teamIndex\"\n                [matchup]=\"element.swissMatchup[1]\">\n            </app-swiss-opponent>\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"Round 3\">\n        <th mat-header-cell *matHeaderCellDef>Round 3</th>\n        <td mat-cell *matCellDef=\"let element\">\n            <app-swiss-opponent *ngIf=\"element.swissMatchup[2]\" [teamIndex]=\"element.teamIndex\"\n                [matchup]=\"element.swissMatchup[2]\">\n            </app-swiss-opponent>\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"Round 4\">\n        <th mat-header-cell *matHeaderCellDef>Round 4</th>\n        <td mat-cell *matCellDef=\"let element\">\n            <app-swiss-opponent *ngIf=\"element.swissMatchup[3]\" [teamIndex]=\"element.teamIndex\"\n                [matchup]=\"element.swissMatchup[3]\">\n            </app-swiss-opponent>\n        </td>\n    </ng-container>\n    <ng-container matColumnDef=\"Round 5\">\n        <th mat-header-cell *matHeaderCellDef>Round 5</th>\n        <td mat-cell *matCellDef=\"let element\">\n            <app-swiss-opponent *ngIf=\"element.swissMatchup[4]\" [teamIndex]=\"element.teamIndex\"\n                [matchup]=\"element.swissMatchup[4]\">\n            </app-swiss-opponent>\n        </td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\" displayedColumns\">\n    </tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>","import { Component, Input, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { SwissTeam } from 'src/app/shared/swiss-team.model';\nimport { TeamDbService } from 'src/app/team-db.service';\n\n@Component({\n  selector: 'app-leader-board',\n  templateUrl: './leader-board.component.html',\n  styleUrls: ['./leader-board.component.scss']\n})\nexport class LeaderBoardComponent implements OnInit {\n  @Input() teams!: MatTableDataSource<SwissTeam>;\n  @Input() displayedColumns: string[] = ['teamName', 'Round 1']\n\n  constructor(public teamDb: TeamDbService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { SwissTeam } from 'src/app/shared/swiss-team.model';\nimport { Matchup } from 'src/app/shared/matchup.model';\nimport { Subject, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-swiss-stage',\n  templateUrl: './swiss-stage.component.html',\n  styleUrls: ['./swiss-stage.component.scss']\n})\nexport class SwissStageComponent implements OnInit, OnDestroy {\n  // displayedColumns: string[] = ['seed', 'teamName', 'Round 1', 'Round 2', 'Round 3', 'Round 4', 'Round 5']\n  @Input() loadBracket!: Subject<void>;\n  @Output() teamsTop8 = new EventEmitter<number[]>();\n  sub!: Subscription;\n  displayedColumns: string[] = ['teamName', 'Round 1']\n  teamsUnsorted: SwissTeam[] = []\n  teamsSorted = new MatTableDataSource<SwissTeam>([]);\n\n  round1 = new MatTableDataSource<Matchup>([]);\n\n  round2High = new MatTableDataSource<Matchup>([]);\n  round2Low = new MatTableDataSource<Matchup>([]);\n  round2HighValid = false;\n  round2LowValid = false;\n\n  round3High = new MatTableDataSource<Matchup>([]);\n  round3Mid = new MatTableDataSource<Matchup>([]);\n  round3Low = new MatTableDataSource<Matchup>([]);\n  round3HighValid = false;\n  round3MidValid = false;\n  round3LowValid = false;\n\n  round4High = new MatTableDataSource<Matchup>([]);\n  round4Low = new MatTableDataSource<Matchup>([]);\n  round4HighValid = false;\n  round4LowValid = false;\n\n  round5 = new MatTableDataSource<Matchup>([]);\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.sub = this.loadBracket.subscribe(() => {\n      let teams = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n      for (let t of teams) {\n        this.teamsUnsorted.push(new SwissTeam(t, []));\n      }\n      this.teamsSorted.data = this.teamsUnsorted.slice().sort(SwissTeam.sortFunctionAllMatches);\n      this.initiateBracket();\n\n    });\n  }\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n  resetTable() {\n    this.teamsUnsorted = [];\n    this.teamsSorted = new MatTableDataSource<SwissTeam>([]);\n    this.round1 = new MatTableDataSource<Matchup>([]);\n\n    this.round2High = new MatTableDataSource<Matchup>([]);\n    this.round2Low = new MatTableDataSource<Matchup>([]);\n    this.round2HighValid = false;\n    this.round2LowValid = false;\n\n    this.round3High = new MatTableDataSource<Matchup>([]);\n    this.round3Mid = new MatTableDataSource<Matchup>([]);\n    this.round3Low = new MatTableDataSource<Matchup>([]);\n    this.round3HighValid = false;\n    this.round3MidValid = false;\n    this.round3LowValid = false;\n\n    this.round4High = new MatTableDataSource<Matchup>([]);\n    this.round4Low = new MatTableDataSource<Matchup>([]);\n    this.round4HighValid = false;\n    this.round4LowValid = false;\n\n    this.round5 = new MatTableDataSource<Matchup>([]);\n  }\n\n  refreshData() {\n    let teams = this.teamsSorted.data.slice().sort(SwissTeam.sortFunctionAllMatches);\n    this.teamsSorted.data = []\n    this.teamsSorted.data = teams\n  }\n\n  initiateBracket() {\n    this.round1.data = this.fillTeams(this.teamsUnsorted)\n  }\n\n  generateRound2() {\n    for (let t of this.teamsUnsorted) {\n      t.swissMatchup = t.swissMatchup.slice(0, 1)\n      t.update()\n    }\n\n    let teamsHigh: SwissTeam[] = []\n    let teamsLow: SwissTeam[] = []\n    for (let m of this.round1.data) {\n      const [a, b] = Matchup.teamWon(m)\n      teamsHigh.push(this.teamsUnsorted[a]);\n      teamsLow.push(this.teamsUnsorted[b]);\n    }\n\n    teamsHigh.sort(SwissTeam.sortFunctionSwissRound)\n    teamsLow.sort(SwissTeam.sortFunctionSwissRound)\n\n    this.round2High.data = this.fillTeams(teamsHigh);\n    this.round2Low.data = this.fillTeams(teamsLow);\n    this.refreshData()\n  }\n\n  initiateRound2(valid: boolean) {\n    if (!valid) {\n      return;\n    }\n    this.generateRound2()\n    if (this.displayedColumns.length < 3) {\n      this.displayedColumns.push('Round 2')\n    }\n  }\n  round2H(b: boolean) {\n    this.round2HighValid = b;\n    this.initiateRound3();\n  }\n  round2L(b: boolean) {\n    this.round2LowValid = b;\n    this.initiateRound3();\n  }\n  initiateRound3() {\n    if (this.round2HighValid && this.round2LowValid) {\n      this.generateRound3()\n      if (this.displayedColumns.length < 4) {\n        this.displayedColumns.push('Round 3')\n      }\n      this.refreshData()\n    }\n  }\n\n  generateRound3() {\n    for (let t of this.teamsUnsorted) {\n      t.swissMatchup = t.swissMatchup.slice(0, 2)\n      t.update()\n    }\n    let teamsHigh: SwissTeam[] = []\n    let teamsMid: SwissTeam[] = []\n    let teamsLow: SwissTeam[] = []\n    for (let m of this.round2High.data) {\n      const [a, b] = Matchup.teamWon(m)\n      teamsHigh.push(this.teamsUnsorted[a]);\n      teamsMid.push(this.teamsUnsorted[b]);\n    }\n    for (let m of this.round2Low.data) {\n      const [a, b] = Matchup.teamWon(m)\n      teamsMid.push(this.teamsUnsorted[a]);\n      teamsLow.push(this.teamsUnsorted[b]);\n    }\n\n    teamsHigh.sort(SwissTeam.sortFunctionSwissRound)\n    teamsMid.sort(SwissTeam.sortFunctionSwissRound)\n    teamsLow.sort(SwissTeam.sortFunctionSwissRound)\n\n    this.round3High.data = this.fillTeams(teamsHigh)\n    this.round3Mid.data = this.fillTeams(teamsMid)\n    this.round3Low.data = this.fillTeams(teamsLow)\n  }\n\n  round3H(b: boolean) {\n    this.round3HighValid = b\n    this.initiateRound4()\n  }\n  round3M(b: boolean) {\n    this.round3MidValid = b\n    this.initiateRound4()\n  }\n  round3L(b: boolean) {\n    this.round3LowValid = b\n    this.initiateRound4()\n  }\n  initiateRound4() {\n    if (this.round3HighValid && this.round3MidValid && this.round3LowValid) {\n      this.generateRound4()\n      if (this.displayedColumns.length < 5) {\n        this.displayedColumns.push('Round 4')\n      }\n      this.refreshData()\n    }\n  }\n\n  generateRound4() {\n    for (let t of this.teamsUnsorted) {\n      t.swissMatchup = t.swissMatchup.slice(0, 3)\n      t.update()\n    }\n    let teamsHigh: SwissTeam[] = []\n    let teamsLow: SwissTeam[] = []\n\n    for (let m of this.round3High.data) {\n      const [a, b] = Matchup.teamWon(m)\n      teamsHigh.push(this.teamsUnsorted[b]);\n    }\n    for (let m of this.round3Mid.data) {\n      const [a, b] = Matchup.teamWon(m)\n      teamsHigh.push(this.teamsUnsorted[a]);\n      teamsLow.push(this.teamsUnsorted[b]);\n    }\n    for (let m of this.round3Low.data) {\n      const [a, b] = Matchup.teamWon(m)\n      teamsLow.push(this.teamsUnsorted[a]);\n    }\n\n    teamsHigh.sort(SwissTeam.sortFunctionSwissRound)\n    teamsLow.sort(SwissTeam.sortFunctionSwissRound)\n\n    this.round4High.data = this.fillTeams(teamsHigh)\n    this.round4Low.data = this.fillTeams(teamsLow)\n  }\n  round4H(b: boolean) {\n    this.round4HighValid = b;\n    this.initiateRound5();\n  }\n  round4L(b: boolean) {\n    this.round4LowValid = b;\n    this.initiateRound5();\n  }\n  initiateRound5() {\n    if (this.round4HighValid && this.round4LowValid) {\n      this.generateRound5()\n      this.refreshData()\n      if (this.displayedColumns.length < 6) {\n        this.displayedColumns.push('Round 5')\n      }\n    }\n  }\n  generateRound5() {\n    for (let t of this.teamsUnsorted) {\n      t.swissMatchup = t.swissMatchup.slice(0, 4)\n      t.update()\n    }\n\n    let teams: SwissTeam[] = []\n\n    for (let m of this.round4High.data) {\n      const [a, b] = Matchup.teamWon(m)\n      teams.push(this.teamsUnsorted[b]);\n    }\n    for (let m of this.round4Low.data) {\n      const [a, b] = Matchup.teamWon(m)\n      teams.push(this.teamsUnsorted[a]);\n    }\n    teams.sort(SwissTeam.sortFunctionSwissRound)\n\n    this.round5.data = this.fillTeams(teams)\n  }\n  round5Val(b: boolean) {\n    if (b) {\n      this.refreshData();\n      let teams: number[] = []\n      for (let t of this.teamsSorted.data.slice(0, 8)) {\n        teams.push(t.teamIndex)\n      }\n      this.teamsTop8.next(teams)\n    }\n  }\n\n  testButton() {\n  }\n\n  fillTeams(teamsArr: SwissTeam[]): Matchup[] {\n    let swissArr: Matchup[] = [];\n    let func = (teamsArr: SwissTeam[]): Matchup[] | undefined => {\n      if (teamsArr.length < 1) {\n        return [];\n      }\n\n      let team1Index = teamsArr[0].teamIndex;\n\n      for (var i = 0; i < teamsArr.length - 1; i++) {\n        let team2Index = teamsArr[teamsArr.length - 1 - i].teamIndex;\n\n        if (this.teamsUnsorted[team2Index].teamBlacklist.find((element) => { return element == team1Index }) !== undefined) { continue; }\n\n        let arr = func(teamsArr.slice(1, teamsArr.length - 1 - i).concat(teamsArr.slice(teamsArr.length - i)))\n\n        if (arr === undefined) { continue; }\n\n        let temp = [new Matchup(team1Index, team2Index)]\n        temp.push(...arr);\n        return temp;\n      }\n      return undefined;\n    }\n\n    let matchups = func(teamsArr);\n\n    if (matchups === undefined) {\n      console.log(\"matchups undefined\")\n      for (var i = 0; i < teamsArr.length / 2; i++) {\n        let team1Index = teamsArr[i].teamIndex;\n        let team2Index = teamsArr[teamsArr.length - 1 - i].teamIndex;\n        let match = new Matchup(team1Index, team2Index)\n        swissArr[i] = match;\n        this.teamsUnsorted[team1Index].swissMatchup.push(match);\n        this.teamsUnsorted[team2Index].swissMatchup.push(match);\n      }\n    } else {\n      swissArr = matchups\n      for (let match of swissArr) {\n        let team1Index = match.team1;\n        let team2Index = match.team2;\n\n        this.teamsUnsorted[team1Index].swissMatchup.push(match);\n        this.teamsUnsorted[team2Index].swissMatchup.push(match);\n      }\n    }\n    return swissArr;\n\n  }\n}\n","<mat-toolbar>\n    Swiss Stage\n</mat-toolbar>\n<div class=\"container\">\n    <div class=\"item\" style=\"flex-grow: 1;\">\n        <app-leader-board [teams]=\"teamsSorted\" [displayedColumns]=\"displayedColumns\"></app-leader-board>\n    </div>\n    <div class=\"item\" style=\"flex-grow: 2;\">\n        <mat-toolbar>\n            Round 1\n        </mat-toolbar>\n        <!-- Round 1 -->\n        <app-swiss-matchup [round]=\"round1\" (isValid)=\"initiateRound2($event)\" (tableUpdate)=\"refreshData()\"\n            style=\"width: 100%;\"></app-swiss-matchup>\n\n        <!-- Round 2 -->\n        <mat-toolbar>\n            Round 2\n        </mat-toolbar>\n        <div class=\"container\">\n            <div class=\"item\" style=\"flex-grow: 1;\">\n                <mat-card>\n                    <mat-card-title>High</mat-card-title>\n                    <mat-card-content>\n                        <app-swiss-matchup [round]=\"round2High\" (isValid)=\"round2H($event)\" style=\"width: 100%;\">\n                        </app-swiss-matchup>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n            <div class=\"item\" style=\"flex-grow: 1;\">\n                <mat-card>\n                    <mat-card-title>Low</mat-card-title>\n                    <mat-card-content>\n                        <app-swiss-matchup [round]=\"round2Low\" (isValid)=\"round2L($event)\" style=\"width: 100%;\">\n                        </app-swiss-matchup>\n                    </mat-card-content>\n                </mat-card>\n\n            </div>\n        </div>\n        <!-- Round 3 -->\n        <mat-toolbar>\n            Round 3\n        </mat-toolbar>\n        <div class=\"container\">\n            <div class=\"item\" style=\"flex-grow: 1;\">\n                <mat-card>\n                    <mat-card-title>High</mat-card-title>\n                    <mat-card-content>\n                        <app-swiss-matchup [round]=\"round3High\" (isValid)=\"round3H($event)\" style=\"width: 100%;\">\n                        </app-swiss-matchup>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n            <div class=\"item\" style=\"flex-grow: 1;\">\n                <mat-card>\n                    <mat-card-title>Mid</mat-card-title>\n                    <mat-card-content>\n                        <app-swiss-matchup [round]=\"round3Mid\" (isValid)=\"round3M($event)\" style=\"width: 100%;\">\n                        </app-swiss-matchup>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n            <div class=\"item\" style=\"flex-grow: 1;\">\n                <mat-card>\n                    <mat-card-title>Low</mat-card-title>\n                    <mat-card-content>\n                        <app-swiss-matchup [round]=\"round3Low\" (isValid)=\"round3L($event)\" style=\"width: 100%;\">\n                        </app-swiss-matchup>\n                    </mat-card-content>\n                </mat-card>\n\n            </div>\n        </div>\n\n        <!-- Round 4 -->\n        <mat-toolbar>\n            Round 4\n        </mat-toolbar>\n        <div class=\"container\">\n            <div class=\"item\" style=\"flex-grow: 1;\">\n                <mat-card>\n                    <mat-card-title>High</mat-card-title>\n                    <mat-card-content>\n                        <app-swiss-matchup [round]=\"round4High\" (isValid)=\"round4H($event)\" style=\"width: 100%;\">\n                        </app-swiss-matchup>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n            <div class=\"item\" style=\"flex-grow: 1;\">\n                <mat-card>\n                    <mat-card-title>Low</mat-card-title>\n                    <mat-card-content>\n                        <app-swiss-matchup [round]=\"round4Low\" (isValid)=\"round4L($event)\" style=\"width: 100%;\">\n                        </app-swiss-matchup>\n                    </mat-card-content>\n                </mat-card>\n\n            </div>\n        </div>\n        <!-- Round 2 -->\n        <mat-toolbar>\n            Round 5\n        </mat-toolbar>\n        <div class=\"container\">\n            <div class=\"item\" style=\"flex-grow: 1;\">\n                <mat-card>\n                    <mat-card-title>High</mat-card-title>\n                    <mat-card-content>\n                        <app-swiss-matchup [round]=\"round5\" (isValid)=\"this.round5Val($event)\" style=\"width: 100%;\">\n                        </app-swiss-matchup>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Subject } from './Subject';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class ReplaySubject extends Subject {\n    constructor(_bufferSize = Infinity, _windowTime = Infinity, _timestampProvider = dateTimestampProvider) {\n        super();\n        this._bufferSize = _bufferSize;\n        this._windowTime = _windowTime;\n        this._timestampProvider = _timestampProvider;\n        this._buffer = [];\n        this._infiniteTimeWindow = true;\n        this._infiniteTimeWindow = _windowTime === Infinity;\n        this._bufferSize = Math.max(1, _bufferSize);\n        this._windowTime = Math.max(1, _windowTime);\n    }\n    next(value) {\n        const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n        if (!isStopped) {\n            _buffer.push(value);\n            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n        }\n        this._trimBuffer();\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._trimBuffer();\n        const subscription = this._innerSubscribe(subscriber);\n        const { _infiniteTimeWindow, _buffer } = this;\n        const copy = _buffer.slice();\n        for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n            subscriber.next(copy[i]);\n        }\n        this._checkFinalizedStatuses(subscriber);\n        return subscription;\n    }\n    _trimBuffer() {\n        const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n        const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n        if (!_infiniteTimeWindow) {\n            const now = _timestampProvider.now();\n            let last = 0;\n            for (let i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n                last = i;\n            }\n            last && _buffer.splice(0, last + 1);\n        }\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Component({\n  selector: 'app-single-matchup',\n  templateUrl: './single-matchup.component.html',\n  styleUrls: ['./single-matchup.component.scss']\n})\nexport class SingleMatchupComponent implements OnInit {\n  @Input() team: ReplaySubject<number> | number = -1;\n  @Input() top!: number;\n  @Output() teamWon = new EventEmitter<void>();\n  teamScore = 0;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  checkWin() {\n    if (this.teamScore === 4) {\n      this.teamWon.next();\n    }\n  }\n\n}\n","<li class=\"\" [ngClass]=\"top ? 'game game-top' : 'game game-bottom'\">\n    <app-team [id]=\"team\"></app-team>\n    <mat-form-field>\n        <!-- <mat-select [(value)]=\"teamScore\" (selectionChange)=\"this.checkWin()\">\n            <mat-option [value]=\"0\">0</mat-option>\n            <mat-option [value]=\"1\">1</mat-option>\n            <mat-option [value]=\"2\">2</mat-option>\n            <mat-option [value]=\"3\">3</mat-option>\n            <mat-option [value]=\"4\">4</mat-option>\n        </mat-select> -->\n        <input matInput type=\"number\" [(ngModel)]=\"teamScore\" (input)=\"this.checkWin()\" min=\"0\" max=\"4\">\n    </mat-form-field>\n</li>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { last, ReplaySubject, Subject, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-single-elim',\n  templateUrl: './single-elim.component.html',\n  styleUrls: ['./single-elim.component.scss']\n})\nexport class SingleElimComponent implements OnInit, OnDestroy {\n  @Input() teamsSubject!: Subject<number[]>;\n  teams = Array<ReplaySubject<number>>(8);\n  teamsChanged!: Subscription;\n\n  match1Winner = new ReplaySubject<number>();\n  match2Winner = new ReplaySubject<number>();\n  match3Winner = new ReplaySubject<number>();\n  match4Winner = new ReplaySubject<number>();\n\n  round2Match1Winner = new ReplaySubject<number>();\n  round2Match2Winner = new ReplaySubject<number>();\n\n  winner = new ReplaySubject<number>();\n\n  constructor() {\n    for (let i = 0; i < 8; i++) {\n      this.teams[i] = new ReplaySubject<number>()\n    }\n  }\n  ngOnDestroy(): void {\n    this.teamsChanged.unsubscribe()\n  }\n\n  ngOnInit(): void {\n    // for (let i = 0; i < 8; i++) {\n    //   this.teams[i].next(i)\n    // }\n    this.teamsChanged = this.teamsSubject.subscribe((arr: number[]) => {\n      for (let i = 0; i < arr.length && i < this.teams.length; i++) {\n        this.teams[i].next(arr[i])\n      }\n    });\n  }\n\n  updateResults(input: ReplaySubject<number>, output: ReplaySubject<number>) {\n    let sub = input.subscribe((val) => {\n      output.next(val);\n    })\n    sub.unsubscribe();\n  }\n\n}\n","<mat-toolbar>\n    Single Elimination Stage\n</mat-toolbar>\n<div class=\"container\">\n    <div class=\"tournament\">\n        <ul class=\"round round-2\">\n            <li class=\"spacer\">&nbsp;</li>\n\n            <app-single-matchup [top]=\"1\" [team]=\"this.teams[0]\" (teamWon)=\"updateResults(this.teams[0], match1Winner)\">\n            </app-single-matchup>\n            <li class=\"game game-spacer\">&nbsp;</li>\n            <app-single-matchup [top]=\"0\" [team]=\"this.teams[7]\" (teamWon)=\"updateResults(this.teams[7], match1Winner)\">\n            </app-single-matchup>\n\n            <li class=\"spacer\">&nbsp;</li>\n\n            <app-single-matchup [top]=\"1\" [team]=\"this.teams[3]\" (teamWon)=\"updateResults(this.teams[3], match2Winner)\">\n            </app-single-matchup>\n            <li class=\"game game-spacer\">&nbsp;</li>\n            <app-single-matchup [top]=\"0\" [team]=\"this.teams[4]\" (teamWon)=\"updateResults(this.teams[4], match2Winner)\">\n            </app-single-matchup>\n\n            <li class=\"spacer\">&nbsp;</li>\n\n            <app-single-matchup [top]=\"1\" [team]=\"this.teams[1]\" (teamWon)=\"updateResults(this.teams[1], match3Winner)\">\n            </app-single-matchup>\n            <li class=\"game game-spacer\">&nbsp;</li>\n            <app-single-matchup [top]=\"0\" [team]=\"this.teams[6]\" (teamWon)=\"updateResults(this.teams[6], match3Winner)\">\n            </app-single-matchup>\n\n            <li class=\"spacer\">&nbsp;</li>\n\n            <app-single-matchup [top]=\"1\" [team]=\"this.teams[2]\" (teamWon)=\"updateResults(this.teams[2], match4Winner)\">\n            </app-single-matchup>\n            <li class=\"game game-spacer\">&nbsp;</li>\n            <app-single-matchup [top]=\"0\" [team]=\"this.teams[5]\" (teamWon)=\"updateResults(this.teams[5], match4Winner)\">\n            </app-single-matchup>\n\n            <li class=\"spacer\">&nbsp;</li>\n        </ul>\n        <ul class=\"round round-3\">\n            <li class=\"spacer\">&nbsp;</li>\n\n            <app-single-matchup [top]=\"1\" [team]=\"match1Winner\"\n                (teamWon)=\"updateResults(match1Winner, round2Match1Winner)\">\n            </app-single-matchup>\n            <li class=\"game game-spacer\">&nbsp;</li>\n            <app-single-matchup [top]=\"0\" [team]=\"match2Winner\"\n                (teamWon)=\"updateResults(match2Winner, round2Match1Winner)\">\n            </app-single-matchup>\n\n            <li class=\"spacer\">&nbsp;</li>\n\n            <app-single-matchup [top]=\"1\" [team]=\"match3Winner\"\n                (teamWon)=\"updateResults(match3Winner, round2Match2Winner)\">\n            </app-single-matchup>\n            <li class=\"game game-spacer\">&nbsp;</li>\n            <app-single-matchup [top]=\"0\" [team]=\"match4Winner\"\n                (teamWon)=\"updateResults(match4Winner, round2Match2Winner)\">\n            </app-single-matchup>\n\n            <li class=\"spacer\">&nbsp;</li>\n        </ul>\n        <ul class=\"round round-4\">\n            <li class=\"spacer\">&nbsp;</li>\n\n            <app-single-matchup [top]=\"1\" [team]=\"round2Match1Winner\"\n                (teamWon)=\"updateResults(round2Match1Winner, winner)\">\n            </app-single-matchup>\n            <li class=\"game game-spacer\">&nbsp;</li>\n            <app-single-matchup [top]=\"0\" [team]=\"round2Match2Winner\"\n                (teamWon)=\"updateResults(round2Match2Winner, winner)\">\n            </app-single-matchup>\n\n            <li class=\"spacer\">&nbsp;</li>\n        </ul>\n        <ul class=\"round round-5\">\n            <li class=\"spacer\">&nbsp;</li>\n\n            <app-team [id]=\"winner\"></app-team>\n\n            <li class=\"spacer\">&nbsp;</li>\n        </ul>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SwissToSingleComponent } from './swiss-to-single.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SwissToSingleComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SwissToSingleRoutingModule { }","import { Component, EventEmitter, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Subject, Subscription } from 'rxjs';\nimport { TeamDbService } from '../team-db.service';\n\n@Component({\n  selector: 'app-swiss-to-single',\n  templateUrl: './swiss-to-single.component.html',\n  styleUrls: ['./swiss-to-single.component.scss']\n})\nexport class SwissToSingleComponent implements OnInit {\n  private params: string[] = [];\n  private teamsTop16: number[] = [];\n  private teamsChanged: Subscription;\n  teamsTop8 = new Subject<number[]>();\n  initiateBracket = new EventEmitter<void>()\n\n  constructor(private teamsDb: TeamDbService, private route: ActivatedRoute) {\n    this.teamsChanged = this.teamsDb.teamsChanged.subscribe(() => {\n      this.teamsTop16 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n      this.initiateBracket.next()\n    });\n  }\n  ngOnDestroy(): void {\n    this.teamsChanged.unsubscribe();\n  }\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params: Params) => {\n      let param: string = params['teams']\n      if (param === undefined) {\n        return;\n      }\n      this.params = param.split(' ')\n      this.teamsDb.initiateTeamsDb(this.params)\n    })\n  }\n\n  getTeams() {\n    return this.teamsTop16.slice()\n  }\n\n  setTop8(teams: number[]) {\n    this.teamsTop8.next(teams)\n  }\n\n}\n","<div class=\"container\">\n    <app-swiss-stage class=\"item\" [loadBracket]=\"this.initiateBracket\" (teamsTop8)=\"setTop8($event)\"></app-swiss-stage>\n    <app-single-elim class=\"item\" [teamsSubject]=\"this.teamsTop8\"></app-single-elim>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SwissToSingleComponent } from './swiss-to-single.component';\nimport { SwissStageComponent } from './swiss-stage/swiss-stage.component';\nimport { SwissOpponentComponent } from './swiss-stage/swiss-opponent/swiss-opponent.component';\nimport { SwissMatchupComponent } from './swiss-stage/swiss-matchup/swiss-matchup.component';\nimport { LeaderBoardComponent } from './swiss-stage/leader-board/leader-board.component';\nimport { SingleElimComponent } from './single-elim/single-elim.component';\nimport { SingleMatchupComponent } from './single-elim/single-matchup/single-matchup.component';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { SharedModule } from '../shared/shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { SwissToSingleRoutingModule } from './swiss-to-single-routing.module';\n\n\n\n@NgModule({\n  declarations: [\n    SwissToSingleComponent,\n    SwissStageComponent,\n    SwissOpponentComponent,\n    SwissMatchupComponent,\n    LeaderBoardComponent,\n    SingleElimComponent,\n    SingleMatchupComponent,\n  ],\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatCardModule,\n    MatTableModule,\n    MatChipsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    HttpClientModule,\n    SharedModule,\n    SwissToSingleRoutingModule\n  ]\n})\nexport class SwissToSingleModule { }\n"],"x_google_ignoreList":[12]}